// Code generated by MockGen. DO NOT EDIT.
// Source: select.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSelectService is a mock of SelectService interface.
type MockSelectService struct {
	ctrl     *gomock.Controller
	recorder *MockSelectServiceMockRecorder
}

// MockSelectServiceMockRecorder is the mock recorder for MockSelectService.
type MockSelectServiceMockRecorder struct {
	mock *MockSelectService
}

// NewMockSelectService creates a new mock instance.
func NewMockSelectService(ctrl *gomock.Controller) *MockSelectService {
	mock := &MockSelectService{ctrl: ctrl}
	mock.recorder = &MockSelectServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSelectService) EXPECT() *MockSelectServiceMockRecorder {
	return m.recorder
}

// ServerURI mocks base method.
func (m *MockSelectService) ServerURI() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServerURI")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServerURI indicates an expected call of ServerURI.
func (mr *MockSelectServiceMockRecorder) ServerURI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerURI", reflect.TypeOf((*MockSelectService)(nil).ServerURI))
}
